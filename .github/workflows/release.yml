name: Release
on:
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install


      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm commitlint --last --verbose

      - name: Code Check - format, lint
        run: pnpm check


      - name: Build CLI
        run: pnpm build-cli

      - name: Unit Tests
        run: pnpm turbo test

      - name: E2E Tests
        run: pnpm turbo e2e


      - name: Create Release PR
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node


      # - name: Publish to NPM
      #   run: cd dist/cli && npm publish --provenance --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



      # # TODO: Create Github Release

      # - name: Docker - Set up QEMU
      #   if: github.event_name == 'push'
      #   uses: docker/setup-qemu-action@v3

      # - name: Docker - Set up Docker Buildx
      #   if: github.event_name == 'push'
      #   uses: docker/setup-buildx-action@v3

      # - name: Docker - Login to Docker Hub
      #   if: github.event_name == 'push'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Docker - Build and push
      #   if: github.event_name == 'push'
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     platforms: linux/amd64,linux/arm64
      #     tags: flexydox/flexydox:latest
