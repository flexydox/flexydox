#!/usr/bin/env node

const shell = require('shelljs');
const editJsonFile = require('edit-json-file');
const cwd = process.cwd();
const path = require('path');
console.log('current working directory:', cwd);

const cliDir = path.join(cwd, 'dist/cli');
const astroSourceDir = path.join(cwd, 'packages/renderer');
const astroOutputDir = path.join(cliDir, `astro`);

const packageJson = editJsonFile(path.join(cwd, 'package.json'));

const version = packageJson.get('version') || '0.0.0';

console.log('cliDir:', cliDir);
console.log('astroSourceDir:', astroSourceDir);
console.log('astroOutputDir:', astroOutputDir);

shell.exec('pnpm clean');
shell.exec('pnpm turbo clean --force');
shell.exec('pnpm turbo build --force');

shell.exec(`pnpm deploy --filter=cli ${cliDir}`);

const cliPackageJson = editJsonFile(path.join(cliDir, 'package.json'));

console.log('setting @flexydox/cli package.json version to: ', version);
cliPackageJson.set('version', version);
cliPackageJson.save();

shell.mkdir('-p', astroOutputDir);
shell.cp('-r', `${astroSourceDir}/src`, astroOutputDir);
shell.cp('-r', `${astroSourceDir}/public`, astroOutputDir);
shell.cp('-r', `${astroSourceDir}/package.json`, astroOutputDir);
shell.cp('-r', `${astroSourceDir}/postcss.config.cjs`, astroOutputDir);

shell.pushd(cliDir);
console.log('Unlinking @flexydox/cli');
shell.exec('pnpm uninstall --global @flexydox/cli');
console.log('Linking @flexydox/cli');
shell.exec('pnpm link --global');
shell.popd();
